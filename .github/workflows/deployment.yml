name: CICD

on:
  # Run on pushes to develop branch
  push:
    branches: ["develop"]
  
  # Run on pull requests to main branch
  pull_request:
    branches: ["main"]
    types: [closed]
  
  # Allow manual deployment to production
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to Deploy to'
        required: true
        default: 'develop'
        type: choice
        options:
          - develop
          - production
      branch:
        description: 'Branch to Deploy from'
        required: true
        type: choice
        default: 'develop'
        options:
          - develop
          - feature
          - main

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment per environment
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate branch/environment combination
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "production" && "${{ github.event.inputs.branch }}" != "main" ]]; then
            echo "Production deployments must use the main branch." >&2
            exit 1
          fi
          if [[ "${{ github.event.inputs.environment }}" == "develop" && "${{ github.event.inputs.branch }}" == "main" ]]; then
            echo "Development deployments cannot use the main branch." >&2
            exit 1
          fi

  build:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: gatsby
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Gatsby
        env:
          PREFIX_PATHS: 'true'
        run: ${{ steps.detect-package-manager.outputs.manager }} run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy-develop:
    needs: build
    if: github.ref == 'refs/heads/develop' || (github.event.inputs.environment == 'develop' && (github.event.inputs.branch == 'develop' || (github.event.inputs.branch == 'custom' && github.event.inputs.custom_branch != '')))
    environment:
      name: develop
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout specific branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch == 'custom' && github.event.inputs.custom_branch || github.event.inputs.branch }}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-production:
    needs: build
    if: >-
      (github.ref == 'refs/heads/main' ||
      (github.event.inputs.environment == 'production' && github.event.inputs.branch == 'main') ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true))
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout specific branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 